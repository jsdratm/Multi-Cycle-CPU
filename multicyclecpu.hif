HIF003
--
-- Copyright (C) 1988-2002 Altera Corporation
-- Any megafunction design, and related net list (encrypted or decrypted),
-- support information, device programming or simulation file, and any other
-- associated documentation or information provided by Altera or a partner
-- under Altera's Megafunction Partnership Program may be used only to
-- program PLD devices (but not masked PLD devices) from Altera.  Any other
-- use of such megafunction design, net list, support information, device
-- programming or simulation file, or any other related documentation or
-- information is prohibited for any other purpose, including, but not
-- limited to modification, reverse engineering, de-compiling, or use with
-- any other silicon devices, unless such use is explicitly licensed under
-- a separate agreement with Altera or a megafunction partner.  Title to
-- the intellectual property, including patents, copyrights, trademarks,
-- trade secrets, or maskworks, embodied in any such megafunction design,
-- net list, support information, device programming or simulation file, or
-- any other related documentation or information provided by Altera or a
-- megafunction partner, remains with Altera, the megafunction partner, or
-- their respective licensors.  No other licenses, including any licenses
-- needed under any third party's intellectual property, are provided herein.
--
-- Warning: do not edit this file!
--
FILES
{
	altshift.tdf
	{
		altshift [DEPTH=0,WIDTH=4,USE_LPM_FOR_AHDL_OPERATORS] []
		{
			12 [DEPTH=0,WIDTH=1,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result0,data0];
			11 [DEPTH=0,WIDTH=8,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result7,result6,result5,result4,result3,result2,result1,result0,data7,data6,data5,data4,data3,data2,data1,data0];
			13 [DEPTH=0,WIDTH=5,USE_LPM_FOR_AHDL_OPERATORS=OFF] [data0,data1,data2,data3,data4,result0,result1,result2,result3,result4];
		}
	}
	addcore.tdf
	{
		addcore [DEVICE_FAMILY,CARRY_CHAIN_LENGTH,CARRY_CHAIN,CONSTANT_CIN,width,USE_LPM_FOR_AHDL_OPERATORS] [addcore.inc,aglobal.inc]
		{
			10 [DEVICE_FAMILY=FLEX10K,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,CONSTANT_CIN=0,width=8,USE_LPM_FOR_AHDL_OPERATORS=OFF] [result7,result6,result5,result4,result3,result2,result1,result0,dataa7,dataa6,dataa5,dataa4,dataa3,dataa2,dataa1,dataa0,datab7,datab6,datab5,datab4,datab3,datab2,datab1,datab0,cin];
			8 [DEVICE_FAMILY=FLEX10K,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,CONSTANT_CIN=0,width=5,USE_LPM_FOR_AHDL_OPERATORS=OFF] [cin,datab0,datab1,datab2,datab3,datab4,dataa0,dataa1,dataa2,dataa3,dataa4,result0,result1,result2,result3,result4];
		}
	}
	lpm_add_sub.tdf
	{
		lpm_add_sub [STYLE,DEVICE_FAMILY,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,OPTIMIZE_FOR_SPEED=5,MAXIMIZE_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=NO,LPM_DIRECTION=DEFAULT,LPM_REPRESENTATION=SIGNED,LPM_WIDTH,USE_LPM_FOR_AHDL_OPERATORS] [lpm_add_sub.inc,addcore.inc,look_add.inc,bypassff.inc,altshift.inc,aglobal.inc]
		{
			9 [STYLE=NORMAL,DEVICE_FAMILY=FLEX10K,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,OPTIMIZE_FOR_SPEED=5,MAXIMIZE_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=NO,LPM_DIRECTION=DEFAULT,LPM_REPRESENTATION=SIGNED,LPM_WIDTH=8,USE_LPM_FOR_AHDL_OPERATORS=OFF] [RESULT7,RESULT6,RESULT5,RESULT4,RESULT3,RESULT2,RESULT1,RESULT0,CIN,DATAB7,DATAB6,DATAB5,DATAB4,DATAB3,DATAB2,DATAB1,DATAB0,DATAA7,DATAA6,DATAA5,DATAA4,DATAA3,DATAA2,DATAA1,DATAA0];
			3 [STYLE=NORMAL,DEVICE_FAMILY=FLEX10K,CARRY_CHAIN_LENGTH=32,CARRY_CHAIN=IGNORE,OPTIMIZE_FOR_SPEED=5,MAXIMIZE_SPEED=5,LPM_PIPELINE=0,ONE_INPUT_IS_CONSTANT=YES,LPM_DIRECTION=DEFAULT,LPM_REPRESENTATION=SIGNED,LPM_WIDTH=5,USE_LPM_FOR_AHDL_OPERATORS=OFF] [DATAA0,DATAA1,DATAA2,DATAA3,DATAA4,DATAB0,DATAB1,DATAB2,DATAB3,DATAB4,CIN,RESULT0,RESULT1,RESULT2,RESULT3,RESULT4];
		}
	}
	altram.tdf
	{
		altram [DEVICE_FAMILY,USE_EAB=ON,REGISTERINPUTMODE=DEFAULT,FILE=NO_FILE,NUMWORDS,AD_WIDTH,WIDTH,USE_LPM_FOR_AHDL_OPERATORS] [memmodes.inc,lpm_decode.inc,lpm_mux.inc,aglobal.inc]
		{
			47 [DEVICE_FAMILY=FLEX10K,USE_EAB=ON,REGISTERINPUTMODE=DATA,FILE="C:/DOCUME~1/ADMINI~1/My Documents/cs393/multicyclecpu2/istranddatamem.mif",NUMWORDS=16,AD_WIDTH=4,WIDTH=32,USE_LPM_FOR_AHDL_OPERATORS=OFF] [Q31,Q30,Q29,Q28,Q27,Q26,Q25,Q24,Q23,Q22,Q21,Q20,Q19,Q18,Q17,Q16,Q15,Q14,Q13,Q12,Q11,Q10,Q9,Q8,Q7,Q6,Q5,Q4,Q3,Q2,Q1,Q0,WE,Data31,Data30,Data29,Data28,Data27,Data26,Data25,Data24,Data23,Data22,Data21,Data20,Data19,Data18,Data17,Data16,Data15,Data14,Data13,Data12,Data11,Data10,Data9,Data8,Data7,Data6,Data5,Data4,Data3,Data2,Data1,Data0,Address3,Address2,Address1,Address0,ClockI];
			34 [DEVICE_FAMILY=FLEX10K,USE_EAB=ON,REGISTERINPUTMODE=DATA,FILE=programcounter.mif,NUMWORDS=4,AD_WIDTH=2,WIDTH=4,USE_LPM_FOR_AHDL_OPERATORS=OFF] [Q3,Q2,Q1,Q0,WE,Data3,Data2,Data1,Data0,Address1,Address0,ClockI];
			32 [DEVICE_FAMILY=FLEX10K,USE_EAB=ON,REGISTERINPUTMODE=DATA,FILE=instructionregister.mif,NUMWORDS=4,AD_WIDTH=2,WIDTH=32,USE_LPM_FOR_AHDL_OPERATORS=OFF] [Q31,Q30,Q29,Q28,Q27,Q26,Q25,Q24,Q23,Q22,Q21,Q20,Q19,Q18,Q17,Q16,Q15,Q14,Q13,Q12,Q11,Q10,Q9,Q8,Q7,Q6,Q5,Q4,Q3,Q2,Q1,Q0,WE,Data31,Data30,Data29,Data28,Data27,Data26,Data25,Data24,Data23,Data22,Data21,Data20,Data19,Data18,Data17,Data16,Data15,Data14,Data13,Data12,Data11,Data10,Data9,Data8,Data7,Data6,Data5,Data4,Data3,Data2,Data1,Data0,Address1,Address0,ClockI];
			17 [DEVICE_FAMILY=FLEX10K,USE_EAB=ON,REGISTERINPUTMODE=DATA,FILE="C:/DOCUME~1/ADMINI~1/My Documents/cs393/multicyclecpu1/istranddatamem.mif",NUMWORDS=16,AD_WIDTH=4,WIDTH=32,USE_LPM_FOR_AHDL_OPERATORS=OFF] [Q31,Q30,Q29,Q28,Q27,Q26,Q25,Q24,Q23,Q22,Q21,Q20,Q19,Q18,Q17,Q16,Q15,Q14,Q13,Q12,Q11,Q10,Q9,Q8,Q7,Q6,Q5,Q4,Q3,Q2,Q1,Q0,WE,Data31,Data30,Data29,Data28,Data27,Data26,Data25,Data24,Data23,Data22,Data21,Data20,Data19,Data18,Data17,Data16,Data15,Data14,Data13,Data12,Data11,Data10,Data9,Data8,Data7,Data6,Data5,Data4,Data3,Data2,Data1,Data0,Address3,Address2,Address1,Address0,ClockI];
			7 [DEVICE_FAMILY=FLEX10K,USE_EAB=ON,REGISTERINPUTMODE=DATA,FILE=NO_FILE,NUMWORDS=4,AD_WIDTH=2,WIDTH=8,USE_LPM_FOR_AHDL_OPERATORS=OFF] [Q7,Q6,Q5,Q4,Q3,Q2,Q1,Q0,WE,Data7,Data6,Data5,Data4,Data3,Data2,Data1,Data0,Address1,Address0,ClockI];
		}
	}
	lpm_ram_dq.tdf
	{
		lpm_ram_dq [DEVICE_FAMILY,LPM_FILE=NO_FILE,LPM_OUTDATA=REGISTERED,LPM_ADDRESS_CONTROL=REGISTERED,LPM_INDATA=REGISTERED,LPM_NUMWORDS,LPM_WIDTHAD,LPM_WIDTH,USE_LPM_FOR_AHDL_OPERATORS] [altram.inc,lpm_mux.inc,lpm_decode.inc,aglobal.inc]
		{
			1 [DEVICE_FAMILY=FLEX10K,LPM_FILE="C:/DOCUME~1/ADMINI~1/My Documents/cs393/multicyclecpu2/istranddatamem.mif",LPM_OUTDATA=UNREGISTERED,LPM_ADDRESS_CONTROL=UNREGISTERED,LPM_INDATA=REGISTERED,LPM_WIDTHAD=4,LPM_WIDTH=32,USE_LPM_FOR_AHDL_OPERATORS=OFF] [we,data0,data1,data2,data3,data4,data5,data6,data7,data8,data9,data10,data11,data12,data13,data14,data15,data16,data17,data18,data19,data20,data21,data22,data23,data24,data25,data26,data27,data28,data29,data30,data31,q0,q1,q2,q3,q4,q5,q6,q7,q8,q9,q10,q11,q12,q13,q14,q15,q16,q17,q18,q19,q20,q21,q22,q23,q24,q25,q26,q27,q28,q29,q30,q31,inclock,address0,address1,address2,address3];
			33 [DEVICE_FAMILY=FLEX10K,LPM_FILE=programcounter.mif,LPM_OUTDATA=UNREGISTERED,LPM_ADDRESS_CONTROL=UNREGISTERED,LPM_INDATA=REGISTERED,LPM_WIDTHAD=2,LPM_WIDTH=4,USE_LPM_FOR_AHDL_OPERATORS=OFF] [we,data0,data1,data2,data3,q0,q1,q2,q3,inclock,address0,address1];
			31 [DEVICE_FAMILY=FLEX10K,LPM_FILE=instructionregister.mif,LPM_OUTDATA=UNREGISTERED,LPM_ADDRESS_CONTROL=UNREGISTERED,LPM_INDATA=REGISTERED,LPM_WIDTHAD=2,LPM_WIDTH=32,USE_LPM_FOR_AHDL_OPERATORS=OFF] [we,data0,data1,data2,data3,data4,data5,data6,data7,data8,data9,data10,data11,data12,data13,data14,data15,data16,data17,data18,data19,data20,data21,data22,data23,data24,data25,data26,data27,data28,data29,data30,data31,q0,q1,q2,q3,q4,q5,q6,q7,q8,q9,q10,q11,q12,q13,q14,q15,q16,q17,q18,q19,q20,q21,q22,q23,q24,q25,q26,q27,q28,q29,q30,q31,inclock,address0,address1];
			16 [DEVICE_FAMILY=FLEX10K,LPM_FILE="C:/DOCUME~1/ADMINI~1/My Documents/cs393/multicyclecpu1/istranddatamem.mif",LPM_OUTDATA=UNREGISTERED,LPM_ADDRESS_CONTROL=UNREGISTERED,LPM_INDATA=REGISTERED,LPM_WIDTHAD=4,LPM_WIDTH=32,USE_LPM_FOR_AHDL_OPERATORS=OFF] [we,data0,data1,data2,data3,data4,data5,data6,data7,data8,data9,data10,data11,data12,data13,data14,data15,data16,data17,data18,data19,data20,data21,data22,data23,data24,data25,data26,data27,data28,data29,data30,data31,q0,q1,q2,q3,q4,q5,q6,q7,q8,q9,q10,q11,q12,q13,q14,q15,q16,q17,q18,q19,q20,q21,q22,q23,q24,q25,q26,q27,q28,q29,q30,q31,inclock,address0,address1,address2,address3];
			6 [DEVICE_FAMILY=FLEX10K,LPM_FILE=NO_FILE,LPM_OUTDATA=UNREGISTERED,LPM_ADDRESS_CONTROL=UNREGISTERED,LPM_INDATA=REGISTERED,LPM_WIDTHAD=2,LPM_WIDTH=8,USE_LPM_FOR_AHDL_OPERATORS=OFF] [we,data0,data1,data2,data3,data4,data5,data6,data7,q0,q1,q2,q3,q4,q5,q6,q7,inclock,address0,address1];
			5 [DEVICE_FAMILY=FLEX10K,LPM_FILE=eightbitregister.mif,LPM_OUTDATA=UNREGISTERED,LPM_ADDRESS_CONTROL=UNREGISTERED,LPM_INDATA=REGISTERED,LPM_WIDTHAD=0,LPM_WIDTH=8,USE_LPM_FOR_AHDL_OPERATORS=OFF] [we,data0,data1,data2,data3,data4,data5,data6,data7,q0,q1,q2,q3,q4,q5,q6,q7,inclock,address];
			4 [DEVICE_FAMILY=FLEX10K,LPM_FILE=eightbitregister.mif,LPM_OUTDATA=UNREGISTERED,LPM_ADDRESS_CONTROL=UNREGISTERED,LPM_INDATA=REGISTERED,LPM_WIDTHAD=1,LPM_WIDTH=8,USE_LPM_FOR_AHDL_OPERATORS=OFF] [we,data0,data1,data2,data3,data4,data5,data6,data7,q0,q1,q2,q3,q4,q5,q6,q7,inclock,address];
		}
	}
	aluout.vhd
	{
		aluout [] [U5125632.DLS,U9092257.DLS,U9234712.DLS,U9587408.DLS,U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			45 [] [];
		}
	}
	programcounter.vhd
	{
		programcounter [] [U5125632.DLS,U9092257.DLS,U9234712.DLS,U9587408.DLS,U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			44 [] [];
		}
	}
	instructionregister.vhd
	{
		instructionregister [] [U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			43 [] [];
		}
	}
	one2bits.vhd
	{
		one2bits [] [U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			42 [] [];
		}
	}
	eightbitregister.vhd
	{
		eightbitregister [] [U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			23 [] [];
		}
	}
	eighttofourbits.vhd
	{
		eighttofourbits [] [U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			39 [] [];
		}
	}
	eto32.vhd
	{
		eto32 [] [U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			41 [] [];
		}
	}
	fourtoeightbits.vhd
	{
		fourtoeightbits [] [U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			29 [] [];
		}
	}
	t2to8.vhd
	{
		t2to8 [] [U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			40 [] [];
		}
	}
	twotoonemultiplexer5width.vhd
	{
		twotoonemultiplexer5width [] [U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			38 [] [];
		}
	}
	thirtyone.vhd
	{
		thirtyone [] [U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			37 [] [];
		}
	}
	oneeightbits.vhd
	{
		oneeightbits [] [U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			36 [] [];
		}
	}
	fourtoonemultiplexer8width.vhd
	{
		fourtoonemultiplexer8width [] [U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			35 [] [];
		}
	}
	fourtoonemultiplexer4width.vhd
	{
		fourtoonemultiplexer4width [] [U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			30 [] [];
		}
	}
	twotoonemultiplexer8width.vhd
	{
		twotoonemultiplexer8width [] [U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			27 [] [];
		}
	}
	twotoonemultiplexer4width.vhd
	{
		twotoonemultiplexer4width [] [U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			26 [] [];
		}
	}
	alucontrol.vhd
	{
		alucontrol [] [U9234712.DLS,U9587408.DLS,U5125632.DLS,U9092257.DLS,U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			28 [] [];
		}
	}
	istranddatamem.vhd
	{
		istranddatamem [] [U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			25 [] [];
		}
	}
	alu8bit.vhd
	{
		alu8bit [] [U9234712.DLS,U9587408.DLS,U5125632.DLS,U9092257.DLS,U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			24 [] [];
		}
	}
	registerfile.vhd
	{
		registerfile [] [U5125632.DLS,U9092257.DLS,U9234712.DLS,U9587408.DLS,U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			22 [] [];
		}
	}
	controlunit.vhd
	{
		controlunit [] [U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			46 [] [];
		}
	}
	fivebitadder.vhd
	{
		fivebitadder [] [U9234712.DLS,U9587408.DLS,U5125632.DLS,U9092257.DLS,U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			2 [] [];
		}
	}
	dispatchrom1.vhd
	{
		dispatchrom1 [] [U9234712.DLS,U9587408.DLS,U5125632.DLS,U9092257.DLS,U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			14 [] [];
		}
	}
	dispatchrom2.vhd
	{
		dispatchrom2 [] [U9234712.DLS,U9587408.DLS,U5125632.DLS,U9092257.DLS,U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			15 [] [];
		}
	}
	fourtoonemultiplexer5width.vhd
	{
		fourtoonemultiplexer5width [] [U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			18 [] [];
		}
	}
	zerofivebits.vhd
	{
		zerofivebits [] [U2043679.DLS,U7449008.DLS,U1147235.DLS]
		{
			19 [] [];
		}
	}
	microprogramcounter.vhd
	{
		microprogramcounter [] [U1147235.DLS,U7449008.DLS,U2043679.DLS,U9587408.DLS,U9234712.DLS,U9092257.DLS,U5125632.DLS]
		{
			20 [] [];
		}
	}
	controlrom.vhd
	{
		controlrom [] [U1147235.DLS,U7449008.DLS,U2043679.DLS,U9092257.DLS,U5125632.DLS,U9587408.DLS,U9234712.DLS]
		{
			21 [] [];
		}
	}
	multicyclecpu.gdf
	{
		multicyclecpu [] []
		{
			0 [] [];
		}
	}
}
TREE
{
	multicyclecpu::(0,0):(0): multicyclecpu.gdf
	{
		registerfile:22:(0,0):(25): registerfile.vhd;
		eightbitregister:23:(0,0):(67): eightbitregister.vhd
		{
			lpm_ram_dq:6:(79,32):(53,lpm_ram_dq_component): lpm_ram_dq.tdf
			{
				altram:7:(74,5):(48,sram): altram.tdf;
			}
		}
		eightbitregister:23:(0,0):(31): eightbitregister.vhd
		{
			lpm_ram_dq:6:(79,32):(53,lpm_ram_dq_component): lpm_ram_dq.tdf
			{
				altram:7:(74,5):(48,sram): altram.tdf;
			}
		}
		eightbitregister:23:(0,0):(26): eightbitregister.vhd
		{
			lpm_ram_dq:6:(79,32):(53,lpm_ram_dq_component): lpm_ram_dq.tdf
			{
				altram:7:(74,5):(48,sram): altram.tdf;
			}
		}
		alu8bit:24:(0,0):(28): alu8bit.vhd
		{
			lpm_add_sub:9:(37,17):(492): lpm_add_sub.tdf
			{
				altshift:12:(226,2):(119,oflow_ext_latency_ffs): altshift.tdf;
				altshift:12:(224,2):(111,carry_ext_latency_ffs): altshift.tdf;
				altshift:11:(222,2):(89,result_ext_latency_ffs): altshift.tdf;
				addcore:10:(212,4):(58,adder): addcore.tdf;
			}
			lpm_add_sub:9:(29,17):(319): lpm_add_sub.tdf
			{
				altshift:12:(226,2):(119,oflow_ext_latency_ffs): altshift.tdf;
				altshift:12:(224,2):(111,carry_ext_latency_ffs): altshift.tdf;
				altshift:11:(222,2):(89,result_ext_latency_ffs): altshift.tdf;
				addcore:10:(212,4):(58,adder): addcore.tdf;
			}
			lpm_add_sub:9:(27,17):(278): lpm_add_sub.tdf
			{
				altshift:12:(226,2):(119,oflow_ext_latency_ffs): altshift.tdf;
				altshift:12:(224,2):(111,carry_ext_latency_ffs): altshift.tdf;
				altshift:11:(222,2):(89,result_ext_latency_ffs): altshift.tdf;
				addcore:10:(212,4):(58,adder): addcore.tdf;
			}
		}
		istranddatamem:25:(0,0):(33): istranddatamem.vhd
		{
			lpm_ram_dq:1:(80,32):(199,lpm_ram_dq_component): lpm_ram_dq.tdf
			{
				altram:47:(101,5):(98,sram): altram.tdf;
			}
		}
		twotoonemultiplexer4width:26:(0,0):(34): twotoonemultiplexer4width.vhd;
		twotoonemultiplexer4width:26:(0,0):(39): twotoonemultiplexer4width.vhd;
		twotoonemultiplexer8width:27:(0,0):(35): twotoonemultiplexer8width.vhd;
		twotoonemultiplexer8width:27:(0,0):(46): twotoonemultiplexer8width.vhd;
		twotoonemultiplexer8width:27:(0,0):(47): twotoonemultiplexer8width.vhd;
		alucontrol:28:(0,0):(36): alucontrol.vhd;
		fourtoeightbits:29:(0,0):(48): fourtoeightbits.vhd;
		fourtoeightbits:29:(0,0):(60): fourtoeightbits.vhd;
		fourtoonemultiplexer4width:30:(0,0):(49): fourtoonemultiplexer4width.vhd;
		fourtoonemultiplexer8width:35:(0,0):(50): fourtoonemultiplexer8width.vhd;
		oneeightbits:36:(0,0):(52): oneeightbits.vhd;
		thirtyone:37:(0,0):(53): thirtyone.vhd;
		twotoonemultiplexer5width:38:(0,0):(54): twotoonemultiplexer5width.vhd;
		twotoonemultiplexer5width:38:(0,0):(55): twotoonemultiplexer5width.vhd;
		eighttofourbits:39:(0,0):(56): eighttofourbits.vhd;
		eighttofourbits:39:(0,0):(63): eighttofourbits.vhd;
		eighttofourbits:39:(0,0):(58): eighttofourbits.vhd;
		eighttofourbits:39:(0,0):(57): eighttofourbits.vhd;
		t2to8:40:(0,0):(59): t2to8.vhd;
		eto32:41:(0,0):(61): eto32.vhd;
		one2bits:42:(0,0):(68): one2bits.vhd;
		instructionregister:43:(0,0):(69): instructionregister.vhd
		{
			lpm_ram_dq:31:(85,32):(325,lpm_ram_dq_component): lpm_ram_dq.tdf
			{
				altram:32:(101,5):(96,sram): altram.tdf;
			}
		}
		programcounter:44:(0,0):(71): programcounter.vhd;
		aluout:45:(0,0):(73): aluout.vhd;
		controlunit:46:(0,0):(75): controlunit.vhd
		{
			fivebitadder:2:(61,18):(66,fbitadd): fivebitadder.vhd
			{
				lpm_add_sub:3:(13,1):(26): lpm_add_sub.tdf
				{
					altshift:12:(226,2):(95,oflow_ext_latency_ffs): altshift.tdf;
					altshift:12:(224,2):(87,carry_ext_latency_ffs): altshift.tdf;
					altshift:13:(222,2):(71,result_ext_latency_ffs): altshift.tdf;
					addcore:8:(212,4):(49,adder): addcore.tdf;
				}
			}
			microprogramcounter:20:(59,18):(65,micropc): microprogramcounter.vhd;
			dispatchrom2:15:(57,16):(64,drom2): dispatchrom2.vhd;
			dispatchrom1:14:(55,16):(63,drom1): dispatchrom1.vhd;
			zerofivebits:19:(53,19):(62,zerocomp): zerofivebits.vhd;
			fourtoonemultiplexer5width:18:(51,15):(61,mux5): fourtoonemultiplexer5width.vhd;
			controlrom:21:(49,15):(60,crom): controlrom.vhd;
		}
	}
}
